{
	"name": "Kubernetes - Local Configuration",
	"dockerFile": "Dockerfile",
	"overrideCommand": false,

	"remoteEnv": {
		"SYNC_LOCALHOST_KUBECONFIG": "true"
	},

	"containerEnv": {
		// Propagate your your own personal GitHub Personal Access Token (PAT) into the devcontainer so that it
		// can be reused in skaffold, yarn etc. Needed for downloading private npm packages from yarn.
		// Note, in order for this to work, VSCode needs to be started with your PAT exported as an env variable GITHUB_TOKEN
		// on your host os (macOS/Windows). Either do this explicitly (export GITHUB_TOKEN=<your PAT>) and then start VSCode or
		// add the PAT exporting to your .bashrc or equivalent so that it is always present in the global env variable GITHUB_TOKEN.
		"GITHUB_TOKEN": "${localEnv:GITHUB_TOKEN}"
   	},

	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
		"source=${env:HOME}${env:USERPROFILE}/.kube,target=/usr/local/share/kube-localhost,type=bind"
		// Uncomment the next line to also sync certs in your .minikube folder
		// "source=${env:HOME}${env:USERPROFILE}/.minikube,target=/usr/local/share/minikube-localhost,type=bind"
	],

	// Set *default* container specific settings.json values on container create.
	"settings": {},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-azuretools.vscode-docker",
		"ms-kubernetes-tools.vscode-kubernetes-tools",
		"visualstudioexptteam.vscodeintellicode",
		"eamodio.gitlens"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "kubectl version",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust.
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "node"
}

